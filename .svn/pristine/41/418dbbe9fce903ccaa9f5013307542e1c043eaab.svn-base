package web.com.springweb.project.p01_controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import jakarta.servlet.http.HttpSession;
import web.com.springweb.project.p04_vo.ClassRecord;
import web.com.springweb.project.p04_vo.CounselRequest;
import web.com.springweb.project.p02_service.P_Service;
import web.com.springweb.project.p04_vo.JoinMem;


@Controller
public class P_Controller {
	@Autowired(required = false)
	private P_Service service;
	

	// http://localhost:7070/pmain
	@RequestMapping("pmain")
	public String main() {
		return "\\WEB-INF\\views\\project\\main.jsp";
	}
	
	// http://localhost:7070/pinsertMem
	@RequestMapping("pinsertMem")
	public String joinMemInsertPost(JoinMem ins, Model d) {
	    if (ins.getMemId() != null) {
	        String result = service.insertJoinMem(ins);
	        if ("등록성공".equals(result)) {
	        	return "redirect:pmain"; // 회원가입 성공 시 main.jsp로 이동
	        } else {
	            d.addAttribute("msg", "회원가입 실패했습니다.");
	            return "\\WEB-INF\\views\\project\\join.jsp"; // 실패 시 다시 join.jsp
	        }
	    }
	    return "WEB-INF\\views\\project\\join.jsp";
	}
	// 아이디 중복확인 ajax
	@RequestMapping("pcheckId")
	@ResponseBody
	public boolean checkId(String memId) {
	    return service.checkId(memId);
	}
	
	@GetMapping("plogin")
	public String loginPage() {
	    return "WEB-INF/views/project/login.jsp"; // 로그인 폼으로 이동
	}
	@PostMapping("plogin")
	public String loginProc(JoinMem loginReq, Model d, HttpSession session) {

		JoinMem user = service.selectMember(loginReq);
	    if (user != null) {
	        session.setAttribute("loginUser", user); // 세션에 저장

	        // accountType에 따라 리디렉션
	        String accountType = user.getAccountType();

	        if ("student".equalsIgnoreCase(accountType)) {
	            return "redirect:pstumain";
	        } else if ("admin".equalsIgnoreCase(accountType)) {
	            return "redirect:padminmain";
	        } else if ("teacher".equalsIgnoreCase(accountType)) {
	            return "redirect:pteamain";
	        } else {
	            // 알 수 없는 계정 유형
	            d.addAttribute("loginError", "알 수 없는 계정 유형입니다.");
	            return "WEB-INF\\views\\project\\login.jsp";
	        }

	    } else {
	        // 로그인 실패
	        d.addAttribute("loginError", "아이디 또는 비밀번호가 틀렸습니다.");
	        return "WEB-INF\\views\\project\\login.jsp";
	    }
	}
	@RequestMapping("pstumain")
	public String stumain() {
	    return "WEB-INF\\views\\project\\stumain.jsp";
	}
	@RequestMapping("padminmain")
	public String adminMain() {
	    return "WEB-INF\\views\\project\\adminmain.jsp";
	}
	@RequestMapping("pteamain")
	public String teaMain() {
	    return "WEB-INF\\views\\project\\teamain.jsp";
	}
	
    @RequestMapping("plogout.do")
    public String logout(HttpSession session) {
        session.invalidate(); // 세션 삭제
        return "redirect:pmain"; // 메인 페이지로 리다이렉트
    }
    // 회원리스트(관리자)
	// http://localhost:7070/pgigetMemberList
    @RequestMapping("pgigetMemberList")
    public String pgetMemberList(JoinMem sch, Model d){
		d.addAttribute("memList", service.getMemberList(sch));
		return "WEB-INF\\views\\project\\list.jsp";
    }
	// 회원 디테일
	// http://localhost:7070/gigetMemberDetail
	@GetMapping("pgigetMemberDetail")
	public String pgetMemberDetail(@RequestParam("memPrid") int memPrid, Model d) {
		System.out.println("컨트롤에서 온 memPrid : "+ memPrid);
		d.addAttribute("mem", service.memberById(memPrid));
		return "WEB-INF\\views\\project\\infoList.jsp";
	}
	// 관리자 회원 디테일 수정
	@RequestMapping("pupdateMem")
	public String updateMem(JoinMem upt, RedirectAttributes redirectAttrs) {
		redirectAttrs.addFlashAttribute("msg", service.updateMem(upt));
		return "redirect:pgigetMemberList";
	}
	// 관리자 회원 디테일 삭제
	@RequestMapping("pdeleteMem")
	public String deleteMem(JoinMem upt, RedirectAttributes redirectAttrs) {
		redirectAttrs.addFlashAttribute("msg", service.deleteMem(upt));
		return "redirect:pgigetMemberList";
	}
	// 학생 회원 디테일 수정
	@RequestMapping("stupdateMem")
	public String stupdateMem(JoinMem upt, RedirectAttributes redirectAttrs) {
		redirectAttrs.addFlashAttribute("msg", service.updateMem(upt));
		return "redirect:stmyPage";
	}
	// 학생 회원 탈퇴, 세션 로그아웃 처리
	@RequestMapping("stdeleteMem")
	public String stdeleteMem(JoinMem upt, RedirectAttributes redirectAttrs, HttpSession session) {
		session.invalidate();
		redirectAttrs.addFlashAttribute("msg", service.deleteMem(upt));
		return "redirect:pmain";
	}
    
    // 지홍님 파트 (선생님 수업 리스트)
	// http://localhost:7070/pclassRecordList
	@GetMapping("pclassRecordList")
	public String classRecordList(ClassRecord sch, Model d){
		d.addAttribute("classRecordList", service.classRecordList(sch));
		return "WEB-INF\\views\\project\\classRecordList.jsp";
	}
	
	// http://localhost:7070/pclassRecordInsert
	@RequestMapping("pclassRecordInsert")
	public String insertClassRecord() {
		return "WEB-INF\\views\\project\\classRecord.jsp";
	}
	@PostMapping("pclassRecordInsert")
	public String insertClassRecordPost(ClassRecord ins, Model d) {
		d.addAttribute("msg",service.insertClassRecord(ins));
		return "redirect:pclassRecordList";
	}
	@PostMapping("pclassRecord")
	public String pclassRecordInsertPost(ClassRecord ins, Model d) {
		return "redirect:/pclassRecord";
	}
	
	// http://localhost:7070/pclassRecordEdit
	@RequestMapping("pclassRecordEdit")
	public String classRecordEdit(ClassRecord sch, Model d) {
		d.addAttribute("pclassRecordList", service.classRecordList(sch));
		return "\\WEB-INF\\views\\project\\classRecordEdit.jsp";
	}
	
	// 승우님 파트
	// 무료 체험 리스트 보는 곳(관리자와 선생님 로그인에서만 보이게 추가하여야 함)
	// 관리자에서만 보이게
	// http://localhost:7070/pcrList
	@RequestMapping("pcrList")
	public String crList(CounselRequest sch, Model d){
		d.addAttribute("crList", service.crList(sch));
		return "WEB-INF\\views\\project\\crList.jsp";
	}
	// 선생님에서만 보이게
	// http://localhost:7070/ptcrList
	@RequestMapping("ptcrList")
	public String tcrList(CounselRequest sch, Model d){
		d.addAttribute("crList", service.crList(sch));
		return "WEB-INF\\views\\project\\tcrList.jsp";
	}
	
	// 무료 체엄 신청폼
    // http://localhost:7070/pcrInsert
    @GetMapping("pcrInsert")
	public String crInsert() {
    	return "WEB-INF\\views\\project\\crForm.jsp";
    }
    @PostMapping("pcrInsert")
	public String crInsertPost(CounselRequest ins, Model d) {
		d.addAttribute("msg", service.insertCR(ins));
		
		return "redirect:/pmain";
	}
    
    // 명철님 파트
    // 회원리스트(연결을 선생님이랑 관리자로 변경하여야함)
	// http://localhost:7070/pgetMemberList
    @RequestMapping("pgetMemberList")
    public String getMemberList(JoinMem sch, Model d){
		d.addAttribute("memList", service.getMemberList(sch));
		return "WEB-INF\\views\\project\\studentIListex.jsp";
    }
	// 회원 디테일
	// http://localhost:7070/pgetMemberDetail
	@GetMapping("pgetMemberDetail")
	public String getMemberDetail(@RequestParam(name="memPrid", defaultValue="0") int memPrid, Model d) {
		System.out.println("컨트롤에서 온 memPrid : "+ memPrid);
		d.addAttribute("mem", service.memberById(memPrid));
		
		return "WEB-INF\\views\\project\\studentInfoList.jsp";
	}
	
	// 마이페이지 클릭 시 이동
	// http://localhost:7070/stmyPage
	@GetMapping("stmyPage")
	public String stmyPage() {
		return "WEB-INF\\views\\project\\stmyPage.jsp";
	}
	
	@RequestMapping("pstmyCourse")
	public String stmyCourse() {
	    return "WEB-INF\\views\\project\\stmyCourse.jsp"; 
	}
	@GetMapping("psubmitPage") 
	public String submitPage() {
		
		return "WEB-INF\\views\\project\\submitPage.jsp";
	}
}
