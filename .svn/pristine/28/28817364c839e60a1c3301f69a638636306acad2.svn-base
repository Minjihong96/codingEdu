package web.com.springweb.project.p03_dao;

import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

import web.com.springweb.project.p04_vo.ClassRecord;
import web.com.springweb.project.p04_vo.CounselRequest;
import web.com.springweb.project.p04_vo.JoinMem;


@Mapper
public interface P_Dao {
	//회원가입
	@Insert("INSERT INTO JOIN_MEMBERSHIP(MEM_PRID, MEM_ID, MEM_PWD, MEM_NAME, MEM_PHONE, "
			+ "MEM_EMAIL, MEM_ADDRESS, MEM_BIRTHDAY, ACCOUNT_TYPE) "
			+ "VALUES(PRID_SEQ.NEXTVAL, #{memId}, #{memPwd}, #{memName}, #{memPhone}, #{memEmail}, #{memAddress}, #{memBirthday}, #{accountType})")
	int insertJoinMem(JoinMem ins);
	// 아이디 중복 체크
	@Select("SELECT COUNT(*) FROM JOIN_MEMBERSHIP WHERE MEM_ID = #{memId}")
	int checkId(String memId);
	// 로그인
	@Select("SELECT * FROM JOIN_MEMBERSHIP WHERE MEM_ID = #{memId} AND MEM_PWD = #{memPwd}")
	JoinMem selectMember(JoinMem login);
	// 관리자 회원 정보 수정
	@Update("UPDATE JOIN_MEMBERSHIP\r\n"
			+ "	SET MEM_PWD = #{memPwd},\r\n"
			+ "		MEM_NAME = #{memName},\r\n"
			+ "		MEM_PHONE = #{memPhone},\r\n"
			+ "		MEM_EMAIL = #{memEmail},\r\n"
			+ "		MEM_ADDRESS = #{memAddress},\r\n"
			+ "		MEM_BIRTHDAY = #{memBirthday},\r\n"
			+ "		ACCOUNT_TYPE = #{accountType}\r\n"
			+ "	WHERE MEM_ID = #{memId}")
	int updateMem(JoinMem upt);
	// 관리자 회원 탈퇴
	@Delete("DELETE FROM JOIN_MEMBERSHIP WHERE MEM_ID = #{memId}")
	int deleteMem(JoinMem del);
	// 지홍님 파트
	// 수업기록
	@Select("SELECT * FROM class_record WHERE CLASS_CONTENTS LIKE #{classContents}")
	List<ClassRecord> classRecordList(ClassRecord sch);
	// 수업기록 입력
	@Insert("INSERT INTO class_record (record_id, mem_prid, class_date, class_contents, subject, session_number, payment, etc) "
			+ "VALUES (crid_Seq.NEXTVAL, #{memPrid}, #{classDate}, #{classContents}, #{subject}, #{sessionNumber}, #{payment}, #{etc})")
	int insertClassRecord(ClassRecord ins);
	
	@Select("SELECT MEM_NAME, MEM_PRID FROM JOIN_MEMBERSHIP WHERE ACCOUNT_TYPE='student'")
	List<JoinMem> studentList(JoinMem sch);
	
	// 승우님 무료 체험 신청
    @Select("SELECT * FROM counsel_request"
    		+ " WHERE NAME LIKE #{name}")
    List<CounselRequest> crList(CounselRequest sch);
    
    @Insert("INSERT INTO counsel_request (name, phone, counseling_time, department, message) "
    		+ "VALUES (#{name}, #{phone}, #{counselingTime}, #{department}, #{message})")
    int insertCR(CounselRequest ins);
    
    // 명철님 일반회원(학생) 
    // 조회 버튼 누르면 아이디값이 가서 상세페이지
	@Select("SELECT * FROM JOIN_MEMBERSHIP WHERE MEM_PRID = #{memPrid}")
	JoinMem memberById(@Param("memPrid")int memPird);
	
	// 회원정보리스트(선생님이랑 관리자 페이지로 연결되게 하기 -> 완료)
	@Select("SELECT * FROM JOIN_MEMBERSHIP \r\n"
			+ "			WHERE MEM_NAME LIKE #{memName} \r\n"
			+ "			AND MEM_ID LIKE #{memId} \r\n"
			+ " ORDER BY MEM_PRID DESC")
	List<JoinMem> getMemberList(JoinMem sch);
	
}
