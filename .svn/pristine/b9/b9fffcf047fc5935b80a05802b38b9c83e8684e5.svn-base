-- 과제와 과제 제출 sql 파일입니다
-- 흐름 : 학생 메인페이지 - 마이페이지 - 수강목록 - 수강상세페이지 - 과제 리스트 - 과제 리스트 클릭 - 과제 제출 폼 페이지
--  과제 테이블

CREATE TABLE ASSIGNMENTS (
    ASSIGNMENT_ID   NUMBER PRIMARY KEY,
    MATERIAL_ID     NUMBER NOT NULL,
    TITLE           VARCHAR2(100) NOT NULL,
    CONTENT         VARCHAR2(200) NOT NULL,
    DUE_DATE        DATE NOT NULL,
    CONSTRAINT FK_ASSIGN_MATERIAL FOREIGN KEY (MATERIAL_ID)
        REFERENCES MATERIALS(MATERIAL_ID)
);
-- ID 검색 구문 예시번호=4
SELECT * FROM ASSIGNMENTS 
WHERE MATERIAL_ID=4;
/*
@Select("ASSIGNMENT_ID, TITLE, CONTENT, DUE_DATE  
FROM ASSIGNMENTS 
WHERE MATERIAL_ID=#{materialId}")
Assignments getAssignments(@Param("materialId")int materialId)

private int assignmentId;
private int MaterialId;
private String title;
private String content;
private Date due_date;

 */
SELECT * FROM ASSIGNMENTS;
-- 시퀀스 생성
CREATE SEQUENCE ASSIGN_SEQ
START WITH 1          -- 시작 값
INCREMENT BY 1;        -- 증가 단위

SELECT * FROM JOIN_MEMBERSHIP;
SELECT * FROM MATERIALS;
SELECT * FROM ASSIGNMENTS WHERE ASSIGNMENT_ID = 1;
SELECT * FROM SUBMISSIONS WHERE SUBMISSION_ID = 4;
SELECT * FROM ASSIGNMENTS
WHERE TITLE LIKE '%%' AND 
CONTENT  LIKE '%%' ORDER BY ASSIGNMENT_ID DESC;
-- INSERT 구문
/*
@Select("SELECT * FROM ASSIGNMENTS
WHERE ASSIGNMENT_ID LIKE '%%' AND 
TITLE LIKE '%%' ORDER BY ASSIGNMENT_ID DESC")
List<Assignment> getAssignment(Assignment sch)

@Insert("INSERT INTO ASSIGNMENT (ASSIGNMENT_ID, MATERIAL_ID, TITLE, CONTENT, DUE_DATE) 
VALUES ( ASSIGN_SEQ.NEXTVAL, #{materialId}, #{title}, #{content}, SYSDATE))")

@Select("SELECT * FROM ASSIGNMENTS WHERE ASSIGNMENT_ID = #{assignmentId}")
Assignment getAssingmentDetail(@Param("assignmentId")int assignmentId);

@Insert("INSERT INTO SUBMISSIONS ( SUBMISSION_ID, MEM_PRID, ASSIGNMENT_ID, CONTENT, ATTACHMENT, SUBMIT_DATE) 
VALUES(SUBMIT_SEQ.NEXTVAL, #{memPrid}, #{assignmentId}, #{content}, #{attachment}, SYSDATE)");
int insertSubmission(Submission ins);

@Select("SELECT * FROM SUBMISSIONS WHERE SUBMISSION_ID = #{submissionId}")
List<Submission> getSubmisson(@Param("submissionId")int submissionId);
 *  */
INSERT INTO ASSIGNMENTS (
  ASSIGNMENT_ID, MATERIAL_ID, TITLE, CONTENT, DUE_DATE
) VALUES (
  ASSIGN_SEQ.NEXTVAL, 21, '과제1', '문제1', TO_DATE('2025-07-02', 'YYYY-MM-DD')
);

INSERT INTO ASSIGNMENTS (
  ASSIGNMENT_ID, MATERIAL_ID, TITLE, CONTENT, DUE_DATE
) VALUES (
  ASSIGN_SEQ.NEXTVAL, 22, '과제2', '문제2', TO_DATE('2025-07-03', 'YYYY-MM-DD')
);

INSERT INTO ASSIGNMENTS (
  ASSIGNMENT_ID, MATERIAL_ID, TITLE, CONTENT, DUE_DATE
) VALUES (
  ASSIGN_SEQ.NEXTVAL, 23, '과제3', '문제3', TO_DATE('2025-07-04', 'YYYY-MM-DD')
);

INSERT INTO ASSIGNMENTS (
  ASSIGNMENT_ID, MATERIAL_ID, TITLE, CONTENT, DUE_DATE
) VALUES (
  ASSIGN_SEQ.NEXTVAL, 24, '과제4', '문제4', TO_DATE('2025-07-05', 'YYYY-MM-DD')
);

INSERT INTO ASSIGNMENTS (
  ASSIGNMENT_ID, MATERIAL_ID, TITLE, CONTENT, DUE_DATE
) VALUES (
  ASSIGN_SEQ.NEXTVAL, 25, '과제5', '문제5', TO_DATE('2025-07-06', 'YYYY-MM-DD')
);
INSERT INTO ASSIGNMENTS (
  ASSIGNMENT_ID, MATERIAL_ID, TITLE, CONTENT, DUE_DATE
) VALUES (
  ASSIGN_SEQ.NEXTVAL, 26, 'JS기초', '문제6', TO_DATE('2025-07-03', 'YYYY-MM-DD')
);

INSERT INTO ASSIGNMENTS (
  ASSIGNMENT_ID, MATERIAL_ID, TITLE, CONTENT, DUE_DATE
) VALUES (
  ASSIGN_SEQ.NEXTVAL, 27, 'HTML폼', '문제7', TO_DATE('2025-07-04', 'YYYY-MM-DD')
);

INSERT INTO ASSIGNMENTS (
  ASSIGNMENT_ID, MATERIAL_ID, TITLE, CONTENT, DUE_DATE
) VALUES (
  ASSIGN_SEQ.NEXTVAL, 28, 'CSS스타일', '문제8', TO_DATE('2025-07-05', 'YYYY-MM-DD')
);

INSERT INTO ASSIGNMENTS (
  ASSIGNMENT_ID, MATERIAL_ID, TITLE, CONTENT, DUE_DATE
) VALUES (
  ASSIGN_SEQ.NEXTVAL, 29, 'Java반복', '문제9', TO_DATE('2025-07-06', 'YYYY-MM-DD')
);

INSERT INTO ASSIGNMENTS (
  ASSIGNMENT_ID, MATERIAL_ID, TITLE, CONTENT, DUE_DATE
) VALUES (
  ASSIGN_SEQ.NEXTVAL, 5, 'SQL기본', '문제10', TO_DATE('2025-07-07', 'YYYY-MM-DD')
);

INSERT INTO ASSIGNMENTS (
  ASSIGNMENT_ID, MATERIAL_ID, TITLE, CONTENT, DUE_DATE
) VALUES (
  ASSIGN_SEQ.NEXTVAL, 6, '배열실습', '문제11', TO_DATE('2025-07-08', 'YYYY-MM-DD')
);

INSERT INTO ASSIGNMENTS (
  ASSIGNMENT_ID, MATERIAL_ID, TITLE, CONTENT, DUE_DATE
) VALUES (
  ASSIGN_SEQ.NEXTVAL, 7, '함수연습', '문제12', TO_DATE('2025-07-09', 'YYYY-MM-DD')
);

INSERT INTO ASSIGNMENTS (
  ASSIGNMENT_ID, MATERIAL_ID, TITLE, CONTENT, DUE_DATE
) VALUES (
  ASSIGN_SEQ.NEXTVAL, 8, 'JSP폼', '문제13', TO_DATE('2025-07-10', 'YYYY-MM-DD')
);

INSERT INTO ASSIGNMENTS (
  ASSIGNMENT_ID, MATERIAL_ID, TITLE, CONTENT, DUE_DATE
) VALUES (
  ASSIGN_SEQ.NEXTVAL, 9, 'DOM이벤트', '문제14', TO_DATE('2025-07-11', 'YYYY-MM-DD')
);

INSERT INTO ASSIGNMENTS (
  ASSIGNMENT_ID, MATERIAL_ID, TITLE, CONTENT, DUE_DATE
) VALUES (
  ASSIGN_SEQ.NEXTVAL, 10, 'AJAX통신', '문제15', TO_DATE('2025-07-12', 'YYYY-MM-DD')
);


-- 과제 제출 테이블
CREATE TABLE SUBMISSIONS (
    SUBMISSION_ID   NUMBER PRIMARY KEY,
    MEM_PRID        NUMBER NOT NULL,
    ASSIGNMENT_ID   NUMBER NOT NULL,
    CONTENT         VARCHAR2(1000) NOT NULL,
    ATTACHMENT      VARCHAR2(500),
    SUBMIT_DATE     DATE NOT NULL,
    CONSTRAINT FK_SUBMIT_MEMBER FOREIGN KEY (MEM_PRID)
        REFERENCES JOIN_MEMBERSHIP(MEM_PRID),
    CONSTRAINT FK_SUBMIT_ASSIGN FOREIGN KEY (ASSIGNMENT_ID)
        REFERENCES ASSIGNMENTS(ASSIGNMENT_ID)
);
SELECT * FROM SUBMISSIONS;

/*
private int submissionId; 
private int memPrid;
private int assignmentId;
private String content;
private String attachment; // 파일명..
private Date submitDate;
private MultipartFile report; // setAttachmemtn(report.getOriginalFileName())



@Insert("")


		@Insert("INSERT INTO BOARD VALUES(BOARD_SEQ.NEXTVAL,"
			+ "#{refno},#{subject},#{content},#{writer},0,SYSDATE, SYSDATE)")
	int insertBoard(Board ins); 
	
		@Insert("INSERT INTO BOARDFILE VALUES(BOARD_SEQ.CURRVAL, #{fname}, #{etc}, SYSDATE, SYSDATE)")
	int insertFile(FileDto ins);	

	
 */
-- 시퀀스 생성
SELECT * FROM SUBMISSIONS ORDER BY SUBMISSION_ID DESC;
CREATE SEQUENCE SUBMIT_SEQ
START WITH 
INCREMENT BY 1;
-- 제출된 과제 리스트 조회
SELECT * FROM SUBMISSIONS WHERE ASSIGNMENT_ID =1 ORDER BY MEM_PRID DESC;
/*
@Select("SELECT * FROM SUBMISSIONS WHERE ASSIGNMENT_ID =#{assignmentId} ORDER BY MEM_PRID DESC")
Submission getSubmissionByAsgid(@Param("assignmentId")int assignmentId);
 */

-- INSERT 구문
-- SUBMIT_SEQ, 
INSERT INTO SUBMISSIONS ( SUBMISSION_ID, MEM_PRID, ASSIGNMENT_ID, CONTENT, ATTACHMENT, SUBMIT_DATE
) VALUES (SUBMIT_SEQ.NEXTVAL, 46, 4, 'if 조건문 활용 예제입니다.', 'uploads/if_example.docx', SYSDATE);
/*
INSERT INTO SUBMISSIONS ( SUBMISSION_ID, MEM_PRID, ASSIGNMENT_ID, CONTENT, ATTACHMENT, SUBMIT_DATE
) VALUES (SUBMIT_SEQ.NEXTVAL, #{memPrid}, #{assignmentId}, #{content}, #{attachment}, SYSDATE);
int insertSubmission(Submission ins);

@Insert("INSERT INTO SUBMISSIONS   SUBMISSION_ID, MEM_PRID,
 ASSIGNMENT_ID, CONTENT, ATTACHMENT, SUBMIT_DATE") 
 VALUES(SUBMIT_SEQ.NEXTVAL, #{submissionId}, #{memPrid}, #{content},#{attachment}, #{submitDate} )
 int uptSubmissions(Submission ins);
 
 
 **/

-- 수정
UPDATE SUBMISSIONS
SET CONTENT = '수정된활용예제 풀이',
ATTACHMENT = 'img01.jpg',
SUBMIT_DATE = SYSDATE
WHERE SUBMISSION_ID =1;
SELECT * FROM SUBMISSIONS;
/*
@Update("UPDATE SUBMISSIONS
SET CONTENT = #{content},
ATTACHMENT = #{attachment},
SUBMIT_DATE = #{submitDate}
WHERE SUBMISSION_ID =#{submission_Id}")
int uptSubmissions(Submission upt);
 */
-- 삭제
DELETE FROM SUBMISSIONS WHERE SUBMISSION_ID=1;
/*
@Delete("DELETE FROM SUBMISSIONS WHERE SUBMISSION_ID=#{submissionId}")
int delSubmission(@Parma("submissionId")int submissionId);
 */

-- 과제 아이디로 과제 상세정보 
SELECT * FROM SUBMISSIONS WHERE SUBMISSION_ID = 2;
/*
@Select("SELECT * FROM SUBMISSIONS WHERE SUBMISSION_ID = ${submissionId}")
Submission getSubmission(@Param("submissionId")int submissionId);
 */



















































